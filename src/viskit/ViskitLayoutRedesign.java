/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package viskit;

import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;

/**
 * New Viskit Application Frame
 * tutorial: https://netbeans.apache.org/tutorial/main/kb/docs/java/quickstart-gui/
 * @author brutzman
 */
public class ViskitLayoutRedesign extends javax.swing.JFrame {

    /**
     * Creates new form NewViskitApplicationJFrame
     */
    public ViskitLayoutRedesign() {
        initComponents();
        
        setTitle("Viskit Discrete Event Simulation (DES) using Simkit");
        // TODO fix
        // https://stackoverflow.com/questions/15657569/how-to-set-icon-to-jframe
        ImageIcon imageIcon = new ImageIcon("images/ViskitLogo.png");
        setIconImage(imageIcon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viskitTabbedPane = new javax.swing.JTabbedPane();
        eventGraphEditorPanel = new javax.swing.JPanel();
        assemblyEditorPanel = new javax.swing.JPanel();
        simulationRunTabbedPane = new javax.swing.JTabbedPane();
        localSimulationRunPanel = new javax.swing.JPanel();
        assembly2_SimulationRunPanel = new javax.swing.JPanel();
        assembly3_SimulationRunPanel = new javax.swing.JPanel();
        analystReportPanel = new javax.swing.JPanel();
        analystReportTabbedPane = new javax.swing.JTabbedPane();
        _1_HeaderPanel = new javax.swing.JPanel();
        _2_ExecutiveSummaryPanel = new javax.swing.JPanel();
        _3_SimulationLocationPanel = new javax.swing.JPanel();
        _4_AssemblyConfirgurationPanel = new javax.swing.JPanel();
        _5_EntityParametersPanel = new javax.swing.JPanel();
        _6_BehaviorDescriptionsPanel = new javax.swing.JPanel();
        _7_StatisticalResultsPanel = new javax.swing.JPanel();
        _8_ConclusionsRecommendationsPanel = new javax.swing.JPanel();
        designOfExperimentsPanel = new javax.swing.JPanel();
        cloudSimulationRunTabbedPane = new javax.swing.JTabbedPane();
        cloudSimulationRunPanel = new javax.swing.JPanel();
        viskitMenuBar = new javax.swing.JMenuBar();
        projectMenu = new javax.swing.JMenu();
        newViskitProjectMI = new javax.swing.JMenuItem();
        openViskitProjectMI = new javax.swing.JMenuItem();
        openRecentViskitProjectMI = new javax.swing.JMenuItem();
        closeViskitProjectMI = new javax.swing.JMenuItem();
        zipMailViskitProjectMI = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        viskitUserPreferencesMI = new javax.swing.JMenuItem();
        exitMI = new javax.swing.JMenuItem();
        eventGraphMenu = new javax.swing.JMenu();
        editEventGraphSubMenu = new javax.swing.JMenu();
        undoEventEditMenuItem = new javax.swing.JMenuItem();
        redoEventEditMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        cutEventEditMenuItem = new javax.swing.JMenuItem();
        copyEventEditMenuItem = new javax.swing.JMenuItem();
        pasteEventEditMenuItem = new javax.swing.JMenuItem();
        deleteEventEditMenuItem = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        addEventNodeMenuItem = new javax.swing.JMenuItem();
        addSimulationParameterMenuItem = new javax.swing.JMenuItem();
        addStateVariableMenuItem = new javax.swing.JMenuItem();
        addSchedulingEdgeMenuItem = new javax.swing.JMenuItem();
        addCancellingEdgeMenuItem = new javax.swing.JMenuItem();
        addSelfReferencingSchedulingEdgeMenuItem = new javax.swing.JMenuItem();
        addSelfReferencingCancellingEdgeMenuItem = new javax.swing.JMenuItem();
        eventGraphMetadataPropertiesMI = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        newEventGraphMI = new javax.swing.JMenuItem();
        openEventGraphMI = new javax.swing.JMenuItem();
        openRecentEventGraphMI = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        closeEventGraphMI = new javax.swing.JMenuItem();
        closeAllEventGraphsMI = new javax.swing.JMenuItem();
        saveEventGraphMI = new javax.swing.JMenuItem();
        saveEventGraphAsMI = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        imageSaveDiagramEventGraphMI = new javax.swing.JMenuItem();
        javaSourceEventGraphMI = new javax.swing.JMenuItem();
        xmlViewEventGraphMI = new javax.swing.JMenuItem();
        assemblyMenu = new javax.swing.JMenu();
        editAssemblySubMenu = new javax.swing.JMenu();
        undoAssemblyEditMenuItem = new javax.swing.JMenuItem();
        redoAssemblyEditMenuItem = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        cutAssemblyEditMenuItem = new javax.swing.JMenuItem();
        copyAssemblyEditMenuItem = new javax.swing.JMenuItem();
        pasteAssemblyEditMenuItem = new javax.swing.JMenuItem();
        deleteAssemblyEditMenuItem = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        addEventGraphMI = new javax.swing.JMenuItem();
        addPropertyChangeListenerMI = new javax.swing.JMenuItem();
        assemblyMetadataPropertiesMI = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        newAssemblyMI = new javax.swing.JMenuItem();
        openAssemblyMI = new javax.swing.JMenuItem();
        openRecentAssemblyMI = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JPopupMenu.Separator();
        closeAssemblyMI = new javax.swing.JMenuItem();
        closeAllAssembliesMI = new javax.swing.JMenuItem();
        saveAssemblyMI = new javax.swing.JMenuItem();
        saveAssemblyAsMI = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        imageSaveDiagramAssemblyMI = new javax.swing.JMenuItem();
        javaSourceAssemblyMI = new javax.swing.JMenuItem();
        xmlViewAssemblyMI = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        prepareAssemblyForSimulationRunMI = new javax.swing.JMenuItem();
        exportToClusterFormatMI = new javax.swing.JMenuItem();
        assemblySimulationRunMenu = new javax.swing.JMenu();
        copySelectedConsoleTextMI = new javax.swing.JMenuItem();
        saveSimulationConsoleMI = new javax.swing.JMenuItem();
        selectAllTextSimulationConsoleMI = new javax.swing.JMenuItem();
        clearSimulationConsoleMI = new javax.swing.JMenuItem();
        viewConsoleTextEditorMI = new javax.swing.JMenuItem();
        analystReportMenu = new javax.swing.JMenu();
        displayAnalystReportHtmlMI = new javax.swing.JMenuItem();
        openAnotherAnalystReportMI = new javax.swing.JMenuItem();
        saveAnalystReportXml = new javax.swing.JMenuItem();
        viewAnalystReportXmlMI = new javax.swing.JMenuItem();
        designOfExperimentsMenu = new javax.swing.JMenu();
        gridkitCloudMenu = new javax.swing.JMenu();
        viewCloudSimulationControllerMI = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMI = new javax.swing.JMenuItem();
        searchMI = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        tutorialMI = new javax.swing.JMenuItem();
        aboutMI = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Viskit"); // NOI18N

        viskitTabbedPane.setToolTipText("DOE");

        javax.swing.GroupLayout eventGraphEditorPanelLayout = new javax.swing.GroupLayout(eventGraphEditorPanel);
        eventGraphEditorPanel.setLayout(eventGraphEditorPanelLayout);
        eventGraphEditorPanelLayout.setHorizontalGroup(
            eventGraphEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        eventGraphEditorPanelLayout.setVerticalGroup(
            eventGraphEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        viskitTabbedPane.addTab("Event Graph Editor", eventGraphEditorPanel);

        javax.swing.GroupLayout assemblyEditorPanelLayout = new javax.swing.GroupLayout(assemblyEditorPanel);
        assemblyEditorPanel.setLayout(assemblyEditorPanelLayout);
        assemblyEditorPanelLayout.setHorizontalGroup(
            assemblyEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        assemblyEditorPanelLayout.setVerticalGroup(
            assemblyEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        viskitTabbedPane.addTab("Assembly Editor", assemblyEditorPanel);

        javax.swing.GroupLayout localSimulationRunPanelLayout = new javax.swing.GroupLayout(localSimulationRunPanel);
        localSimulationRunPanel.setLayout(localSimulationRunPanelLayout);
        localSimulationRunPanelLayout.setHorizontalGroup(
            localSimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        localSimulationRunPanelLayout.setVerticalGroup(
            localSimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );

        simulationRunTabbedPane.addTab("Local Simulation Run", localSimulationRunPanel);

        javax.swing.GroupLayout assembly2_SimulationRunPanelLayout = new javax.swing.GroupLayout(assembly2_SimulationRunPanel);
        assembly2_SimulationRunPanel.setLayout(assembly2_SimulationRunPanelLayout);
        assembly2_SimulationRunPanelLayout.setHorizontalGroup(
            assembly2_SimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        assembly2_SimulationRunPanelLayout.setVerticalGroup(
            assembly2_SimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );

        simulationRunTabbedPane.addTab("(Assembly 2 Simulation Run)", assembly2_SimulationRunPanel);

        javax.swing.GroupLayout assembly3_SimulationRunPanelLayout = new javax.swing.GroupLayout(assembly3_SimulationRunPanel);
        assembly3_SimulationRunPanel.setLayout(assembly3_SimulationRunPanelLayout);
        assembly3_SimulationRunPanelLayout.setHorizontalGroup(
            assembly3_SimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        assembly3_SimulationRunPanelLayout.setVerticalGroup(
            assembly3_SimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );

        simulationRunTabbedPane.addTab("(Assembly 3 Simulation Run)", assembly3_SimulationRunPanel);

        viskitTabbedPane.addTab("Simulation Run Manager", simulationRunTabbedPane);

        analystReportTabbedPane.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout _1_HeaderPanelLayout = new javax.swing.GroupLayout(_1_HeaderPanel);
        _1_HeaderPanel.setLayout(_1_HeaderPanelLayout);
        _1_HeaderPanelLayout.setHorizontalGroup(
            _1_HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _1_HeaderPanelLayout.setVerticalGroup(
            _1_HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("1 Header", _1_HeaderPanel);

        javax.swing.GroupLayout _2_ExecutiveSummaryPanelLayout = new javax.swing.GroupLayout(_2_ExecutiveSummaryPanel);
        _2_ExecutiveSummaryPanel.setLayout(_2_ExecutiveSummaryPanelLayout);
        _2_ExecutiveSummaryPanelLayout.setHorizontalGroup(
            _2_ExecutiveSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _2_ExecutiveSummaryPanelLayout.setVerticalGroup(
            _2_ExecutiveSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("2 ExecutiveSummary", _2_ExecutiveSummaryPanel);

        javax.swing.GroupLayout _3_SimulationLocationPanelLayout = new javax.swing.GroupLayout(_3_SimulationLocationPanel);
        _3_SimulationLocationPanel.setLayout(_3_SimulationLocationPanelLayout);
        _3_SimulationLocationPanelLayout.setHorizontalGroup(
            _3_SimulationLocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _3_SimulationLocationPanelLayout.setVerticalGroup(
            _3_SimulationLocationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("3 Scenario Location", _3_SimulationLocationPanel);

        javax.swing.GroupLayout _4_AssemblyConfirgurationPanelLayout = new javax.swing.GroupLayout(_4_AssemblyConfirgurationPanel);
        _4_AssemblyConfirgurationPanel.setLayout(_4_AssemblyConfirgurationPanelLayout);
        _4_AssemblyConfirgurationPanelLayout.setHorizontalGroup(
            _4_AssemblyConfirgurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _4_AssemblyConfirgurationPanelLayout.setVerticalGroup(
            _4_AssemblyConfirgurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("4 Assembly Configuration", _4_AssemblyConfirgurationPanel);

        javax.swing.GroupLayout _5_EntityParametersPanelLayout = new javax.swing.GroupLayout(_5_EntityParametersPanel);
        _5_EntityParametersPanel.setLayout(_5_EntityParametersPanelLayout);
        _5_EntityParametersPanelLayout.setHorizontalGroup(
            _5_EntityParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _5_EntityParametersPanelLayout.setVerticalGroup(
            _5_EntityParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("5 Entity Parameters", _5_EntityParametersPanel);

        javax.swing.GroupLayout _6_BehaviorDescriptionsPanelLayout = new javax.swing.GroupLayout(_6_BehaviorDescriptionsPanel);
        _6_BehaviorDescriptionsPanel.setLayout(_6_BehaviorDescriptionsPanelLayout);
        _6_BehaviorDescriptionsPanelLayout.setHorizontalGroup(
            _6_BehaviorDescriptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _6_BehaviorDescriptionsPanelLayout.setVerticalGroup(
            _6_BehaviorDescriptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("6 Behavior Descriptions", _6_BehaviorDescriptionsPanel);

        javax.swing.GroupLayout _7_StatisticalResultsPanelLayout = new javax.swing.GroupLayout(_7_StatisticalResultsPanel);
        _7_StatisticalResultsPanel.setLayout(_7_StatisticalResultsPanelLayout);
        _7_StatisticalResultsPanelLayout.setHorizontalGroup(
            _7_StatisticalResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _7_StatisticalResultsPanelLayout.setVerticalGroup(
            _7_StatisticalResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("7 Statistical Results", _7_StatisticalResultsPanel);

        javax.swing.GroupLayout _8_ConclusionsRecommendationsPanelLayout = new javax.swing.GroupLayout(_8_ConclusionsRecommendationsPanel);
        _8_ConclusionsRecommendationsPanel.setLayout(_8_ConclusionsRecommendationsPanelLayout);
        _8_ConclusionsRecommendationsPanelLayout.setHorizontalGroup(
            _8_ConclusionsRecommendationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        _8_ConclusionsRecommendationsPanelLayout.setVerticalGroup(
            _8_ConclusionsRecommendationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        analystReportTabbedPane.addTab("8 Conclusions, Recommendations", _8_ConclusionsRecommendationsPanel);

        javax.swing.GroupLayout analystReportPanelLayout = new javax.swing.GroupLayout(analystReportPanel);
        analystReportPanel.setLayout(analystReportPanelLayout);
        analystReportPanelLayout.setHorizontalGroup(
            analystReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(analystReportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analystReportTabbedPane)
                .addContainerGap())
        );
        analystReportPanelLayout.setVerticalGroup(
            analystReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(analystReportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analystReportTabbedPane)
                .addContainerGap())
        );

        viskitTabbedPane.addTab("Analyst Report Editor", analystReportPanel);

        javax.swing.GroupLayout designOfExperimentsPanelLayout = new javax.swing.GroupLayout(designOfExperimentsPanel);
        designOfExperimentsPanel.setLayout(designOfExperimentsPanelLayout);
        designOfExperimentsPanelLayout.setHorizontalGroup(
            designOfExperimentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        designOfExperimentsPanelLayout.setVerticalGroup(
            designOfExperimentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        viskitTabbedPane.addTab("(Design of Experiments)", designOfExperimentsPanel);

        cloudSimulationRunTabbedPane.setEnabled(false);

        javax.swing.GroupLayout cloudSimulationRunPanelLayout = new javax.swing.GroupLayout(cloudSimulationRunPanel);
        cloudSimulationRunPanel.setLayout(cloudSimulationRunPanelLayout);
        cloudSimulationRunPanelLayout.setHorizontalGroup(
            cloudSimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        cloudSimulationRunPanelLayout.setVerticalGroup(
            cloudSimulationRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );

        cloudSimulationRunTabbedPane.addTab("Cloud Simulation Run", cloudSimulationRunPanel);

        viskitTabbedPane.addTab("(Cloud Simulation Run)", cloudSimulationRunTabbedPane);

        projectMenu.setText("Project");

        newViskitProjectMI.setMnemonic(KeyEvent.VK_N);
        newViskitProjectMI.setText("New Viskit Project");
        projectMenu.add(newViskitProjectMI);

        openViskitProjectMI.setMnemonic(KeyEvent.VK_O);
        openViskitProjectMI.setText("Open Project");
        openViskitProjectMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openViskitProjectMIActionPerformed(evt);
            }
        });
        projectMenu.add(openViskitProjectMI);

        openRecentViskitProjectMI.setMnemonic(KeyEvent.VK_R);
        openRecentViskitProjectMI.setText("Open Recent Project");
        openRecentViskitProjectMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openRecentViskitProjectMIActionPerformed(evt);
            }
        });
        projectMenu.add(openRecentViskitProjectMI);

        closeViskitProjectMI.setMnemonic(KeyEvent.VK_O);
        closeViskitProjectMI.setText("Close Project");
        closeViskitProjectMI.setToolTipText("Close current project and all related files");
        closeViskitProjectMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeViskitProjectMIActionPerformed(evt);
            }
        });
        projectMenu.add(closeViskitProjectMI);

        zipMailViskitProjectMI.setMnemonic(KeyEvent.VK_Z);
        zipMailViskitProjectMI.setText("Zip, Mail Viskit Project");
        zipMailViskitProjectMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipMailViskitProjectMIActionPerformed(evt);
            }
        });
        projectMenu.add(zipMailViskitProjectMI);
        projectMenu.add(jSeparator2);

        viskitUserPreferencesMI.setMnemonic(KeyEvent.VK_U);
        viskitUserPreferencesMI.setText("Viskit User Preferences");
        viskitUserPreferencesMI.setToolTipText("User settings for Viskit application");
        viskitUserPreferencesMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viskitUserPreferencesMIActionPerformed(evt);
            }
        });
        projectMenu.add(viskitUserPreferencesMI);

        exitMI.setMnemonic(KeyEvent.VK_X);
        exitMI.setText("Quit");
        projectMenu.add(exitMI);

        viskitMenuBar.add(projectMenu);

        eventGraphMenu.setText("Event Graph");
        eventGraphMenu.setActionCommand("Event Graph Editor");

        editEventGraphSubMenu.setText("Edit Event Graph...");

        undoEventEditMenuItem.setMnemonic(KeyEvent.VK_U);
        undoEventEditMenuItem.setText("Undo");
        undoEventEditMenuItem.setToolTipText("Undo last action");
        editEventGraphSubMenu.add(undoEventEditMenuItem);

        redoEventEditMenuItem.setMnemonic(KeyEvent.VK_R);
        redoEventEditMenuItem.setText("Redo");
        redoEventEditMenuItem.setToolTipText("Redo last undo");
        editEventGraphSubMenu.add(redoEventEditMenuItem);
        editEventGraphSubMenu.add(jSeparator3);

        cutEventEditMenuItem.setMnemonic(KeyEvent.VK_X);
        cutEventEditMenuItem.setText("Cut");
        cutEventEditMenuItem.setToolTipText("Cut selected item");
        editEventGraphSubMenu.add(cutEventEditMenuItem);

        copyEventEditMenuItem.setMnemonic(KeyEvent.VK_C);
        copyEventEditMenuItem.setText("Copy");
        copyEventEditMenuItem.setToolTipText("Copy selected item");
        editEventGraphSubMenu.add(copyEventEditMenuItem);

        pasteEventEditMenuItem.setMnemonic(KeyEvent.VK_V);
        pasteEventEditMenuItem.setText("Paste Events");
        pasteEventEditMenuItem.setToolTipText("Paste selected item");
        editEventGraphSubMenu.add(pasteEventEditMenuItem);

        deleteEventEditMenuItem.setMnemonic(KeyEvent.VK_V);
        deleteEventEditMenuItem.setText("Delete");
        deleteEventEditMenuItem.setToolTipText("Delete selected item");
        editEventGraphSubMenu.add(deleteEventEditMenuItem);
        editEventGraphSubMenu.add(jSeparator5);

        addEventNodeMenuItem.setMnemonic(KeyEvent.VK_A);
        addEventNodeMenuItem.setText("Add a new Event Node");
        addEventNodeMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addEventNodeMenuItem);

        addSimulationParameterMenuItem.setText("Add a new Simulation Parameter");
        addSimulationParameterMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addSimulationParameterMenuItem);

        addStateVariableMenuItem.setText("Add a new State Variable");
        addStateVariableMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addStateVariableMenuItem);

        addSchedulingEdgeMenuItem.setText("Add Scheduling Edge");
        addSchedulingEdgeMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addSchedulingEdgeMenuItem);

        addCancellingEdgeMenuItem.setText("Add Cancelling Edge");
        addCancellingEdgeMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addCancellingEdgeMenuItem);

        addSelfReferencingSchedulingEdgeMenuItem.setText("Add Self-Referencing Scheduling Edge");
        addSelfReferencingSchedulingEdgeMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addSelfReferencingSchedulingEdgeMenuItem);

        addSelfReferencingCancellingEdgeMenuItem.setText("Add Self-Referencing Cancelling Edge");
        addSelfReferencingCancellingEdgeMenuItem.setToolTipText("");
        editEventGraphSubMenu.add(addSelfReferencingCancellingEdgeMenuItem);

        eventGraphMenu.add(editEventGraphSubMenu);

        eventGraphMetadataPropertiesMI.setText("Edit Event Graph Metadata");
        eventGraphMetadataPropertiesMI.setToolTipText("graph metadata editor");
        eventGraphMetadataPropertiesMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventGraphMetadataPropertiesMIActionPerformed(evt);
            }
        });
        eventGraphMenu.add(eventGraphMetadataPropertiesMI);
        eventGraphMenu.add(jSeparator9);

        newEventGraphMI.setMnemonic(KeyEvent.VK_N);
        newEventGraphMI.setText("New Event Graph");
        eventGraphMenu.add(newEventGraphMI);

        openEventGraphMI.setMnemonic(KeyEvent.VK_O);
        openEventGraphMI.setText("Open Event Graph");
        eventGraphMenu.add(openEventGraphMI);

        openRecentEventGraphMI.setMnemonic(KeyEvent.VK_R);
        openRecentEventGraphMI.setText("Open Recent Event Graph");
        eventGraphMenu.add(openRecentEventGraphMI);
        eventGraphMenu.add(jSeparator10);

        closeEventGraphMI.setMnemonic(KeyEvent.VK_C);
        closeEventGraphMI.setText("Close Event Graph");
        closeEventGraphMI.setToolTipText("Close selected event graph");
        eventGraphMenu.add(closeEventGraphMI);

        closeAllEventGraphsMI.setMnemonic(KeyEvent.VK_A);
        closeAllEventGraphsMI.setText("Close All Event Graphs");
        closeAllEventGraphsMI.setToolTipText("Close all event graphs");
        eventGraphMenu.add(closeAllEventGraphsMI);

        saveEventGraphMI.setMnemonic(KeyEvent.VK_C);
        saveEventGraphMI.setText("Save Event Graph");
        saveEventGraphMI.setToolTipText("Close selected event graph");
        eventGraphMenu.add(saveEventGraphMI);

        saveEventGraphAsMI.setMnemonic(KeyEvent.VK_C);
        saveEventGraphAsMI.setText("Save Event Graph As...");
        saveEventGraphAsMI.setToolTipText("Close selected event graph");
        eventGraphMenu.add(saveEventGraphAsMI);
        eventGraphMenu.add(jSeparator7);

        imageSaveDiagramEventGraphMI.setText("Image Save");
        imageSaveDiagramEventGraphMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageSaveDiagramEventGraphMIActionPerformed(evt);
            }
        });
        eventGraphMenu.add(imageSaveDiagramEventGraphMI);

        javaSourceEventGraphMI.setText("Java Code Generation");
        javaSourceEventGraphMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javaSourceEventGraphMIActionPerformed(evt);
            }
        });
        eventGraphMenu.add(javaSourceEventGraphMI);

        xmlViewEventGraphMI.setText("XML Source View");
        xmlViewEventGraphMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xmlViewEventGraphMIActionPerformed(evt);
            }
        });
        eventGraphMenu.add(xmlViewEventGraphMI);

        viskitMenuBar.add(eventGraphMenu);

        assemblyMenu.setText("Assembly           ");

        editAssemblySubMenu.setText("Edit Assembly...");

        undoAssemblyEditMenuItem.setMnemonic(KeyEvent.VK_U);
        undoAssemblyEditMenuItem.setText("Undo");
        undoAssemblyEditMenuItem.setToolTipText("Undo last action");
        editAssemblySubMenu.add(undoAssemblyEditMenuItem);

        redoAssemblyEditMenuItem.setMnemonic(KeyEvent.VK_R);
        redoAssemblyEditMenuItem.setText("Redo");
        redoAssemblyEditMenuItem.setToolTipText("Redo last undo");
        editAssemblySubMenu.add(redoAssemblyEditMenuItem);
        editAssemblySubMenu.add(jSeparator11);

        cutAssemblyEditMenuItem.setMnemonic(KeyEvent.VK_X);
        cutAssemblyEditMenuItem.setText("Cut");
        cutAssemblyEditMenuItem.setToolTipText("Cut selected item");
        cutAssemblyEditMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutAssemblyEditMenuItemActionPerformed(evt);
            }
        });
        editAssemblySubMenu.add(cutAssemblyEditMenuItem);

        copyAssemblyEditMenuItem.setMnemonic(KeyEvent.VK_C);
        copyAssemblyEditMenuItem.setText("Copy");
        copyAssemblyEditMenuItem.setToolTipText("Copy selected item");
        editAssemblySubMenu.add(copyAssemblyEditMenuItem);

        pasteAssemblyEditMenuItem.setMnemonic(KeyEvent.VK_V);
        pasteAssemblyEditMenuItem.setText("Paste Events");
        pasteAssemblyEditMenuItem.setToolTipText("Paste selected item");
        editAssemblySubMenu.add(pasteAssemblyEditMenuItem);

        deleteAssemblyEditMenuItem.setMnemonic(KeyEvent.VK_V);
        deleteAssemblyEditMenuItem.setText("Delete");
        deleteAssemblyEditMenuItem.setToolTipText("Delete selected item");
        editAssemblySubMenu.add(deleteAssemblyEditMenuItem);
        editAssemblySubMenu.add(jSeparator8);

        addEventGraphMI.setMnemonic(KeyEvent.VK_A);
        addEventGraphMI.setText("Add a new Event Graph");
        addEventGraphMI.setToolTipText("");
        editAssemblySubMenu.add(addEventGraphMI);

        addPropertyChangeListenerMI.setMnemonic(KeyEvent.VK_A);
        addPropertyChangeListenerMI.setText("Add a new Property Change Listener");
        addPropertyChangeListenerMI.setToolTipText("");
        addPropertyChangeListenerMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPropertyChangeListenerMIActionPerformed(evt);
            }
        });
        editAssemblySubMenu.add(addPropertyChangeListenerMI);

        assemblyMenu.add(editAssemblySubMenu);

        assemblyMetadataPropertiesMI.setText("Edit Assembly Metadata");
        assemblyMetadataPropertiesMI.setToolTipText("graph metadata editor");
        assemblyMetadataPropertiesMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assemblyMetadataPropertiesMIActionPerformed(evt);
            }
        });
        assemblyMenu.add(assemblyMetadataPropertiesMI);
        assemblyMenu.add(jSeparator4);

        newAssemblyMI.setMnemonic(KeyEvent.VK_N);
        newAssemblyMI.setText("New Assembly");
        assemblyMenu.add(newAssemblyMI);

        openAssemblyMI.setMnemonic(KeyEvent.VK_O);
        openAssemblyMI.setText("Open Assembly");
        assemblyMenu.add(openAssemblyMI);

        openRecentAssemblyMI.setMnemonic(KeyEvent.VK_R);
        openRecentAssemblyMI.setText("Open Recent Assembly");
        assemblyMenu.add(openRecentAssemblyMI);
        assemblyMenu.add(jSeparator12);

        closeAssemblyMI.setMnemonic(KeyEvent.VK_C);
        closeAssemblyMI.setText("Close Assembly");
        closeAssemblyMI.setToolTipText("Close the assembly");
        assemblyMenu.add(closeAssemblyMI);

        closeAllAssembliesMI.setMnemonic(KeyEvent.VK_A);
        closeAllAssembliesMI.setText("Close All Assemblies");
        closeAllAssembliesMI.setToolTipText("Close all event graphs");
        assemblyMenu.add(closeAllAssembliesMI);

        saveAssemblyMI.setMnemonic(KeyEvent.VK_C);
        saveAssemblyMI.setText("Save Assembly");
        saveAssemblyMI.setToolTipText("Close selected event graph");
        assemblyMenu.add(saveAssemblyMI);

        saveAssemblyAsMI.setMnemonic(KeyEvent.VK_C);
        saveAssemblyAsMI.setText("Save Assembly As...");
        saveAssemblyAsMI.setToolTipText("Close selected event graph");
        assemblyMenu.add(saveAssemblyAsMI);
        assemblyMenu.add(jSeparator6);

        imageSaveDiagramAssemblyMI.setText("Image Save");
        imageSaveDiagramAssemblyMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageSaveDiagramAssemblyMIActionPerformed(evt);
            }
        });
        assemblyMenu.add(imageSaveDiagramAssemblyMI);

        javaSourceAssemblyMI.setText("Java Code Generation");
        javaSourceAssemblyMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javaSourceAssemblyMIActionPerformed(evt);
            }
        });
        assemblyMenu.add(javaSourceAssemblyMI);

        xmlViewAssemblyMI.setText("XML Source View");
        xmlViewAssemblyMI.setToolTipText("");
        assemblyMenu.add(xmlViewAssemblyMI);
        assemblyMenu.add(jSeparator14);

        prepareAssemblyForSimulationRunMI.setMnemonic('P');
        prepareAssemblyForSimulationRunMI.setText("Prepare Assembly for Simulation Run");
        prepareAssemblyForSimulationRunMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepareAssemblyForSimulationRunMIActionPerformed(evt);
            }
        });
        assemblyMenu.add(prepareAssemblyForSimulationRunMI);

        exportToClusterFormatMI.setText("Export to Cluster Format");
        exportToClusterFormatMI.setEnabled(false);
        assemblyMenu.add(exportToClusterFormatMI);

        viskitMenuBar.add(assemblyMenu);

        assemblySimulationRunMenu.setText("Simulation Run   ");

        copySelectedConsoleTextMI.setMnemonic(KeyEvent.VK_S);
        copySelectedConsoleTextMI.setText("Copy selected console text");
        assemblySimulationRunMenu.add(copySelectedConsoleTextMI);

        saveSimulationConsoleMI.setMnemonic(KeyEvent.VK_S);
        saveSimulationConsoleMI.setText("Save console text to File");
        assemblySimulationRunMenu.add(saveSimulationConsoleMI);

        selectAllTextSimulationConsoleMI.setMnemonic(KeyEvent.VK_S);
        selectAllTextSimulationConsoleMI.setText("Select all console text");
        assemblySimulationRunMenu.add(selectAllTextSimulationConsoleMI);

        clearSimulationConsoleMI.setMnemonic(KeyEvent.VK_S);
        clearSimulationConsoleMI.setText("Clear all console text");
        assemblySimulationRunMenu.add(clearSimulationConsoleMI);

        viewConsoleTextEditorMI.setMnemonic(KeyEvent.VK_V);
        viewConsoleTextEditorMI.setText("View console output in text editor");
        viewConsoleTextEditorMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewConsoleTextEditorMIActionPerformed(evt);
            }
        });
        assemblySimulationRunMenu.add(viewConsoleTextEditorMI);

        viskitMenuBar.add(assemblySimulationRunMenu);

        analystReportMenu.setText("Analyst Report   ");

        displayAnalystReportHtmlMI.setMnemonic(KeyEvent.VK_D);
        displayAnalystReportHtmlMI.setText("Generate HTML Analyst Report");
        displayAnalystReportHtmlMI.setToolTipText("Display Analyst Report in Web browser");
        analystReportMenu.add(displayAnalystReportHtmlMI);

        openAnotherAnalystReportMI.setMnemonic(KeyEvent.VK_O);
        openAnotherAnalystReportMI.setText("Open another Analyst Report XML");
        analystReportMenu.add(openAnotherAnalystReportMI);

        saveAnalystReportXml.setMnemonic(KeyEvent.VK_S);
        saveAnalystReportXml.setText("Save Analyst Report XML");
        analystReportMenu.add(saveAnalystReportXml);

        viewAnalystReportXmlMI.setMnemonic(KeyEvent.VK_V);
        viewAnalystReportXmlMI.setText("XML View of Saved Analyst Report");
        analystReportMenu.add(viewAnalystReportXmlMI);

        viskitMenuBar.add(analystReportMenu);

        designOfExperimentsMenu.setText("Design of Experiments");
        designOfExperimentsMenu.setToolTipText("DOE");
        designOfExperimentsMenu.setEnabled(false);
        viskitMenuBar.add(designOfExperimentsMenu);

        gridkitCloudMenu.setText("Cloud");
        gridkitCloudMenu.setEnabled(false);

        viewCloudSimulationControllerMI.setText("Cloud Simulation Run");
        viewCloudSimulationControllerMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCloudSimulationControllerMIActionPerformed(evt);
            }
        });
        gridkitCloudMenu.add(viewCloudSimulationControllerMI);

        viskitMenuBar.add(gridkitCloudMenu);

        helpMenu.setText("Help");

        contentsMI.setText("Contents");
        helpMenu.add(contentsMI);

        searchMI.setText("Search");
        helpMenu.add(searchMI);
        helpMenu.add(jSeparator13);

        tutorialMI.setMnemonic(KeyEvent.VK_T);
        tutorialMI.setText("Tutorial");
        helpMenu.add(tutorialMI);

        aboutMI.setMnemonic(KeyEvent.VK_A);
        aboutMI.setText("About Viskit");
        helpMenu.add(aboutMI);

        viskitMenuBar.add(helpMenu);

        setJMenuBar(viskitMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viskitTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viskitTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zipMailViskitProjectMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipMailViskitProjectMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipMailViskitProjectMIActionPerformed

    private void openViskitProjectMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openViskitProjectMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openViskitProjectMIActionPerformed

    private void openRecentViskitProjectMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openRecentViskitProjectMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openRecentViskitProjectMIActionPerformed

    private void closeViskitProjectMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeViskitProjectMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeViskitProjectMIActionPerformed

    private void cutAssemblyEditMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutAssemblyEditMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cutAssemblyEditMenuItemActionPerformed

    private void viewCloudSimulationControllerMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCloudSimulationControllerMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewCloudSimulationControllerMIActionPerformed

    private void eventGraphMetadataPropertiesMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventGraphMetadataPropertiesMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventGraphMetadataPropertiesMIActionPerformed

    private void assemblyMetadataPropertiesMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assemblyMetadataPropertiesMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assemblyMetadataPropertiesMIActionPerformed

    private void viskitUserPreferencesMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viskitUserPreferencesMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viskitUserPreferencesMIActionPerformed

    private void javaSourceAssemblyMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javaSourceAssemblyMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_javaSourceAssemblyMIActionPerformed

    private void viewConsoleTextEditorMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewConsoleTextEditorMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewConsoleTextEditorMIActionPerformed

    private void imageSaveDiagramEventGraphMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageSaveDiagramEventGraphMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imageSaveDiagramEventGraphMIActionPerformed

    private void addPropertyChangeListenerMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPropertyChangeListenerMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addPropertyChangeListenerMIActionPerformed

    private void prepareAssemblyForSimulationRunMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepareAssemblyForSimulationRunMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prepareAssemblyForSimulationRunMIActionPerformed

    private void xmlViewEventGraphMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xmlViewEventGraphMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xmlViewEventGraphMIActionPerformed

    private void imageSaveDiagramAssemblyMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageSaveDiagramAssemblyMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imageSaveDiagramAssemblyMIActionPerformed

    private void javaSourceEventGraphMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javaSourceEventGraphMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_javaSourceEventGraphMIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } 
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) 
        {
            java.util.logging.Logger.getLogger(ViskitLayoutRedesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ViskitLayoutRedesign().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel _1_HeaderPanel;
    private javax.swing.JPanel _2_ExecutiveSummaryPanel;
    private javax.swing.JPanel _3_SimulationLocationPanel;
    private javax.swing.JPanel _4_AssemblyConfirgurationPanel;
    private javax.swing.JPanel _5_EntityParametersPanel;
    private javax.swing.JPanel _6_BehaviorDescriptionsPanel;
    private javax.swing.JPanel _7_StatisticalResultsPanel;
    private javax.swing.JPanel _8_ConclusionsRecommendationsPanel;
    private javax.swing.JMenuItem aboutMI;
    private javax.swing.JMenuItem addCancellingEdgeMenuItem;
    private javax.swing.JMenuItem addEventGraphMI;
    private javax.swing.JMenuItem addEventNodeMenuItem;
    private javax.swing.JMenuItem addPropertyChangeListenerMI;
    private javax.swing.JMenuItem addSchedulingEdgeMenuItem;
    private javax.swing.JMenuItem addSelfReferencingCancellingEdgeMenuItem;
    private javax.swing.JMenuItem addSelfReferencingSchedulingEdgeMenuItem;
    private javax.swing.JMenuItem addSimulationParameterMenuItem;
    private javax.swing.JMenuItem addStateVariableMenuItem;
    private javax.swing.JMenu analystReportMenu;
    private javax.swing.JPanel analystReportPanel;
    private javax.swing.JTabbedPane analystReportTabbedPane;
    private javax.swing.JPanel assembly2_SimulationRunPanel;
    private javax.swing.JPanel assembly3_SimulationRunPanel;
    private javax.swing.JPanel assemblyEditorPanel;
    private javax.swing.JMenu assemblyMenu;
    private javax.swing.JMenuItem assemblyMetadataPropertiesMI;
    private javax.swing.JMenu assemblySimulationRunMenu;
    private javax.swing.JMenuItem clearSimulationConsoleMI;
    private javax.swing.JMenuItem closeAllAssembliesMI;
    private javax.swing.JMenuItem closeAllEventGraphsMI;
    private javax.swing.JMenuItem closeAssemblyMI;
    private javax.swing.JMenuItem closeEventGraphMI;
    private javax.swing.JMenuItem closeViskitProjectMI;
    private javax.swing.JPanel cloudSimulationRunPanel;
    private javax.swing.JTabbedPane cloudSimulationRunTabbedPane;
    private javax.swing.JMenuItem contentsMI;
    private javax.swing.JMenuItem copyAssemblyEditMenuItem;
    private javax.swing.JMenuItem copyEventEditMenuItem;
    private javax.swing.JMenuItem copySelectedConsoleTextMI;
    private javax.swing.JMenuItem cutAssemblyEditMenuItem;
    private javax.swing.JMenuItem cutEventEditMenuItem;
    private javax.swing.JMenuItem deleteAssemblyEditMenuItem;
    private javax.swing.JMenuItem deleteEventEditMenuItem;
    private javax.swing.JMenu designOfExperimentsMenu;
    private javax.swing.JPanel designOfExperimentsPanel;
    private javax.swing.JMenuItem displayAnalystReportHtmlMI;
    private javax.swing.JMenu editAssemblySubMenu;
    private javax.swing.JMenu editEventGraphSubMenu;
    private javax.swing.JPanel eventGraphEditorPanel;
    private javax.swing.JMenu eventGraphMenu;
    private javax.swing.JMenuItem eventGraphMetadataPropertiesMI;
    private javax.swing.JMenuItem exitMI;
    private javax.swing.JMenuItem exportToClusterFormatMI;
    private javax.swing.JMenu gridkitCloudMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem imageSaveDiagramAssemblyMI;
    private javax.swing.JMenuItem imageSaveDiagramEventGraphMI;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JMenuItem javaSourceAssemblyMI;
    private javax.swing.JMenuItem javaSourceEventGraphMI;
    private javax.swing.JPanel localSimulationRunPanel;
    private javax.swing.JMenuItem newAssemblyMI;
    private javax.swing.JMenuItem newEventGraphMI;
    private javax.swing.JMenuItem newViskitProjectMI;
    private javax.swing.JMenuItem openAnotherAnalystReportMI;
    private javax.swing.JMenuItem openAssemblyMI;
    private javax.swing.JMenuItem openEventGraphMI;
    private javax.swing.JMenuItem openRecentAssemblyMI;
    private javax.swing.JMenuItem openRecentEventGraphMI;
    private javax.swing.JMenuItem openRecentViskitProjectMI;
    private javax.swing.JMenuItem openViskitProjectMI;
    private javax.swing.JMenuItem pasteAssemblyEditMenuItem;
    private javax.swing.JMenuItem pasteEventEditMenuItem;
    private javax.swing.JMenuItem prepareAssemblyForSimulationRunMI;
    private javax.swing.JMenu projectMenu;
    private javax.swing.JMenuItem redoAssemblyEditMenuItem;
    private javax.swing.JMenuItem redoEventEditMenuItem;
    private javax.swing.JMenuItem saveAnalystReportXml;
    private javax.swing.JMenuItem saveAssemblyAsMI;
    private javax.swing.JMenuItem saveAssemblyMI;
    private javax.swing.JMenuItem saveEventGraphAsMI;
    private javax.swing.JMenuItem saveEventGraphMI;
    private javax.swing.JMenuItem saveSimulationConsoleMI;
    private javax.swing.JMenuItem searchMI;
    private javax.swing.JMenuItem selectAllTextSimulationConsoleMI;
    private javax.swing.JTabbedPane simulationRunTabbedPane;
    private javax.swing.JMenuItem tutorialMI;
    private javax.swing.JMenuItem undoAssemblyEditMenuItem;
    private javax.swing.JMenuItem undoEventEditMenuItem;
    private javax.swing.JMenuItem viewAnalystReportXmlMI;
    private javax.swing.JMenuItem viewCloudSimulationControllerMI;
    private javax.swing.JMenuItem viewConsoleTextEditorMI;
    private javax.swing.JMenuBar viskitMenuBar;
    private javax.swing.JTabbedPane viskitTabbedPane;
    private javax.swing.JMenuItem viskitUserPreferencesMI;
    private javax.swing.JMenuItem xmlViewAssemblyMI;
    private javax.swing.JMenuItem xmlViewEventGraphMI;
    private javax.swing.JMenuItem zipMailViskitProjectMI;
    // End of variables declaration//GEN-END:variables
}
