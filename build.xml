<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright (c) 1995-2025 held by the author(s).  All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer
      in the documentation and/or other materials provided with the
      distribution.
    * Neither the names of the Naval Postgraduate School (NPS)
      Modeling Virtual Environments and Simulation (MOVES) Institute
      https://www.nps.edu and https://www.nps.edu/web/moves
      nor the names of its contributors may be used to endorse or
      promote products derived from this software without specific
      prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-->

<!-- Seems to render in Mozilla Firefox the best.  Broken in IE7 -->
<?xml-stylesheet type="text/xsl" href="./ant2html.xsl"?>

<project basedir="." default="build" name="Viskit">
    <description>
        Ant build file for the NPS Viskit Discrete Event Simulation (DES) UI and
        associated libraries. Third-party jar files are not compiled from source
        here, but they are copied as necessary for the Viskit distribution.
    </description>

    <import file="nbproject/ide-file-targets.xml"/>

    <!-- External properties file.  This contains properties that vary from developer       -->
    <!-- to developer.  Also, any properties in this file will override the properties set  -->
    <!-- in this build.xml file, so, be careful.                                            -->
    <property file="build.properties"/>

    <!-- Project directories -->
    <property description="Where the distribution files wind up." location="dist" name="dir.dist"/>

    <property description="Where all the JAXB extensions are." location="${dir.lib}/jaxb" name="dir.lib.xml"/>

    <property description="Runtime module extension libraries." location="${dir.lib}/ext" name="dir.lib.ext"/>

    <property description="Root of the javadoc tree for Viskit." location="doc/api" name="dir.api.doc"/>

    <property description="Generated JAXB bindings for Event Graphs" location="${dir.bindings}/eventgraph" name="dir.src.simevg"/>

    <property description="Generated JAXB bindings for Assemblies" location="${dir.bindings}/assembly" name="dir.src.simasm"/>

    <property description="Generated JAXB bindings for CLI config" location="${dir.bindings}/cli" name="dir.src.cli"/>

    <property description="Generated JAXB bindings for SGE qstat config" location="${dir.bindings}/sge/qstat" name="dir.src.sge.qstat"/>

    <property description="OA3302 Course Examples Directory" location="MyViskitProjects/DefaultProject" name="examples.lib" />

    <property description="DISKIT directory" location="../DISKIT" name="dir.diskit"/>

    <property description="Assembly utility" location="${dir.src}/viskit/xsd/assembly" name="dir.src.simasm.util"/>

    <property description="CLI utility" location="${dir.src}/viskit/xsd/cli" name="dir.src.cli.util"/>

    <property description="Event Graph utilities" location="${dir.src}/viskit/xsd/sge" name="dir.src.sge.util"/>

    <property description="where the help source sits" location="${dir.src}/viskit/javahelp" name="javahelp"/>

    <property description="where the generated and copied help files go" location="${dir.build.classes}/viskit/javahelp" name="build.javahelp"/>

    <!-- access to local environment variables -->
    <property environment="env"/>

    <!-- Compile time classpaths -->
    <path id="jaxb.compile.path"> <!-- On WIN machines, javax.activation-api.jar has to be up here -->
        <fileset dir="${dir.lib.xml}" includes="codemodel.jar istack-commons-runtime.jar istack-commons-tools.jar javax.activation-api.jar jaxb-api.jar jaxb-runtime.jar jaxb-xjc.jar relaxng-datatype.jar rngom.jar xsom.jar"/>
    </path>

    <path id="compile.classpath">
        <pathelement location="${dir.lib}/actions.jar"/>
        <pathelement location="${dir.lib}/bsh-2.0b4.jar"/>
        <pathelement location="${dir.lib}/commons-codec-1.3.jar"/>
        <pathelement location="${dir.lib}/commons-configuration2-2.10.1.jar"/>
        <pathelement location="${dir.lib}/commons-lang3-3.14.0.jar"/>
        <pathelement location="${jaxb-api.jar}"/>
        <pathelement location="${dir.lib}/jdom-1.1.3.jar"/>
        <pathelement location="${jfreechart.jar}"/>
        <pathelement location="${dir.lib}/jgraph5.jar"/>
        <pathelement location="${dir.lib}/jhall.jar"/>
        <pathelement path="${log4j.jars}"/>
        <pathelement location="${dir.lib}/simkit.jar"/>
        <pathelement location="${dir.lib}/xmlrpc-2.0.jar"/>
    </path>

    <!-- Runtime classpaths -->
    <path id="runtime.extension.path">
        <fileset dir="${dir.lib.ext}" includes="**/*.jar"/>
    </path>
    <path id="jaxb.runtime.path">
        <fileset dir="${dir.lib.xml}" includes="istack-commons-runtime.jar javax.activation-api.jar jaxb-api.jar jaxb-runtime.jar"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${dir.build.classes}"/>
        <pathelement location="${dir.lib}/actions.jar"/>
        <pathelement location="${dir.lib}/batik-ext.jar"/>
        <pathelement location="${dir.lib}/bsh-2.0b4.jar"/>
        <pathelement location="${dir.lib}/commons-beanutils-1.9.4.jar"/>
        <pathelement location="${dir.lib}/commons-collections4-4.1.jar"/>
        <pathelement location="${dir.lib}/commons-configuration2-2.10.1.jar"/>
        <pathelement location="${dir.lib}/commons-digester3-3.2.jar"/>
        <!--<pathelement location="${dir.lib}/commons-jxpath-1.3.jar"/>-->
        <pathelement location="${dir.lib}/commons-lang3-3.14.0.jar"/>
        <pathelement location="${dir.lib}/commons-logging-1.3.1.jar"/>
        <pathelement location="${dir.lib}/commons-text-1.12.0.jar"/>
        <path refid="runtime.extension.path"/>
        <path refid="jaxb.runtime.path"/>
        <pathelement location="${jcommon.jar}"/>
        <pathelement location="${dir.lib}/jdom-1.1.3.jar"/>
        <pathelement location="${jfreechart.jar}"/>
        <pathelement location="${dir.lib}/jgraph5.jar"/>
        <pathelement location="${dir.lib}/jhall.jar"/>
        <pathelement path="${log4j.jars}"/>
        <pathelement location="${dir.lib}/resolver.jar"/>
        <pathelement location="${dir.lib}/serializer.jar"/>
        <pathelement location="${dir.lib}/simkit.jar"/>
        <pathelement location="${dir.lib}/xalan.jar"/>
        <pathelement location="${dir.lib}/xercesImpl.jar"/>
        <pathelement location="${dir.lib}/xmlrpc-2.0.jar"/>
    </path>

    <!-- Test classpath -->
    <path id="runtime.test.classpath">
        <path refid="runtime.classpath"/>
        <pathelement location="${dir.lib}/support/junit.jar"/>
    </path>

    <!-- For the launch4j installers -->
    <fileset file="${dist.editor.jar}" id="runtime.viskit.editor"/>

    <!-- TaskDefs -->
    <taskdef classname="com.sun.tools.xjc.XJCTask"
             name="xjc"
             classpathref="jaxb.compile.path"/>

    <!-- @deprecated legacy task (no longer used) -->
    <taskdef classname="net.amadan.trang.ant.TrangTask" name="trang">
        <classpath>
            <fileset dir="${dir.lib}/support" includes="trang*.jar"/>
        </classpath>
    </taskdef>

    <!--  === TARGET: all === -->
    <target name="all" description="clean then build everything" depends="dist"/>

    <!--  === TARGET: build === -->
    <target name="build" depends="build.no.extensions" description="default build, no run"/>

    <!--  === TARGET: help === -->
    <target name="help"
            depends="javahelp"
            description="Display Viskit build infomation and launch the JavaHelp set">
        <echo>
This is the Ant build file for the NPS Viskit and associated libraries.
Third-party jar files are not compiled from source here, but they are
copied as necessary for Viskit distribution.  This buildfile was
created and tested using ${ant.version}.
Type "ant -p" on the command line for a list of targets to invoke and
their descpritions.
        </echo>
        <java classpath="${dir.lib}/hsviewer.jar:${dir.lib}/jhall.jar"
              classname="sunw.demo.jhdemo.JHLauncher"
              fork="true">
            <arg line="-helpset ${build.javahelp}/vHelpSet.hs"/>
        </java>
    </target>

    <target name="platformInitialize" depends="platformType"/>
    <target name="platformType">
        <condition property="isWin" >
            <os family="windows"/>
        </condition>
        <condition property="isMac" >
            <os family="mac"/>
        </condition>
        <!-- Based on Apache Ant user-manual example -->
        <condition property="isUnix">
            <and>
                <os family="unix"/>

                <not>
                    <equals arg1="${os.name}" arg2="Mac OS X"/>
                </not>

            </and>
        </condition>
    </target>
    <target name="initWin" if="isWin">
        <property name="run.args" value="${win.run.args}"/>
    </target>
    <target name="initUnix" if="isUnix">
        <property name="run.args" value="${unix.run.args}"/>
    </target>
    <target name="initMac" if="isMac">
        <property name="run.args" value="${mac.run.args}"/>
    </target>
    <target name="initializeAll" depends="platformInitialize,initWin,initUnix,initMac"/>

    <target name="check.JAVA_HOME" unless="env.JAVA_HOME" if="isWin">
        <echo message="warning:  JAVA_HOME not set!"/>
    </target>
    <target name="check.ANT_HOME" unless="env.ANT_HOME" if="isWin">
        <echo message="warning:  ANT_HOME not set!"/>
    </target>

    <!--  === TARGET: init === -->
    <target name="init"
            depends="initializeAll,check.JAVA_HOME,check.ANT_HOME"
            description="Preparatory actions required for all targets">
        <tstamp>
            <format property="TODAY_US" pattern="EEE, d MMM yyyy HHmm Z" locale="en,US"/>
        </tstamp>
        <echo message="${product.shortname} v${product.Version}"/>
        <echo message="Build started on ${TODAY_US}"/>
        <echo message="Base directory: ${basedir}"/>
        <echo message="JAVA_HOME: ${java.home}"/>
        <echo message="viskit.args=${viskit.args}"/>
        <echo message=".viskit.dir=${dot.viskit.dir}"/>

        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.build.lib}"/>
        <mkdir dir="${dir.build.classes}"/>
        <mkdir dir="${dir.src.simevg}"/>
        <mkdir dir="${dir.src.simasm}"/>
        <mkdir dir="${dir.src.simasm}/stats"/>
        <mkdir dir="${dir.src.cli}"/>
        <mkdir dir="${dir.lib.ext}"/>
    </target>

    <!-- @deprecated - Now a legacy target as we are no longer building schema from DTD -->
    <target name="build.schema"
            depends="init"
            description="Create xsd Schemas from dtd @deprecated">
        <trang failonerror="true" input="${simkit.dtd}" output="${simkit.xsd}" schemaIn="dtd" schemaOut="xsd"/>
        <trang failonerror="true" input="${assembly.dtd}" output="${assembly.xsd}" schemaIn="dtd" schemaOut="xsd"/>

	<!-- useful for autogenerating stats schema and adding type validator -->
        <!--trang failonerror="true" input="${statistics.dtd}" output="${statistics.xsd}" schemaIn="dtd" schemaOut="xsd"/-->

	<!-- Requires GNU Patch on the %PATH% -->
	<!--patch patchfile="${statistics.xsd.patch}" originalfile="${statistics.xsd}"/-->
        <trang failonerror="true" input="${cli.dtd}" output="${cli.xsd}" schemaIn="dtd" schemaOut="xsd"/>
    </target>

    <target name="bindings.simkit"
            depends="init"
            description="Create bindings to Simkit XML Schemas" >

        <xjc extension="true"
             package="viskit.xsd.bindings.eventgraph"
             schema="${simkit.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.simevg}"/>
        </xjc>
        <xjc extension="true"
             package="viskit.xsd.bindings.assembly"
             schema="${assembly.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.simasm}"/>
        </xjc>
        <xjc extension="true"
             package="viskit.xsd.bindings.assembly.stats"
             schema="${statistics.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.simasm}/stats"/>
        </xjc>
        <xjc extension="true"
             package="viskit.xsd.bindings.cli"
             schema="${cli.xsd}"
             destdir="${dir.src}">
            <produces dir="${dir.src.cli}"/>
        </xjc>
        <!--xjc extension="true"
                package="viskit.xsd.bindings.sge.qstat"
                schema="${qstat.xsd}"
                destdir="${dir.src}">
            <produces dir="${dir.src.sge.qstat}"/>
        </xjc-->
    </target>

    <!--  === TARGET: compile === -->
    <target name="compile" depends="bindings.simkit,javahelp">
        <javac destdir="${dir.build.classes}"
               release="${javac.release}"
               debug="${javac.debug}"
               fork="true"
               includeantruntime="false">

            <compilerarg line="${javac.compile.args}"/>
            <classpath refid="compile.classpath"/>
            <src path="${dir.src}"/>
        </javac>

        <!-- Common compile tasks -->
        <copy todir="${dir.build.classes}">
            <fileset dir="${dir.src}">
                <include name="viskit/version.txt"/>
                <include name="viskit/images/*.png"/>
                <include name="viskit/images/*.gif"/>
                <include name="viskit/images/*.jpg"/>
            </fileset>
            <fileset dir="${configuration.dir}">
                <include name="log4j2.xml"/>
            </fileset>
        </copy>

        <!-- ClassFinder prop for Simkit class skipping -->
        <copy todir="${dir.build.classes}/config">
            <fileset dir="${configuration.dir}">
                <include name="${class.finder.props}"/>
                <include name="${analyst.report.stylesheet}"/>
            </fileset>
        </copy>

        <copy todir="${dir.build.classes}/xsd">
            <fileset file="${assembly.xsd}"/>
            <fileset file="${simkit.xsd}"/>
        </copy>

        <!-- For some reason, viskit.doe.package-info.java makes its own directory in build/classes -->
        <delete dir="${dir.build.classes}/doe"/>
    </target>

    <target name="javahelp"
            depends="init"
            description="build the help search database">

        <copy todir="${build.javahelp}">
            <fileset dir="${javahelp}"/>
        </copy>
        <java classname="com.sun.java.help.search.Indexer"
              fork="true">

            <!-- turn this on to make sure it's working -->
            <!--<arg value="-verbose"/>-->
            <arg value="-db"/>
            <arg value="${build.javahelp}/JavaHelpSearch"/>
            <arg value="${javahelp}/Pages"/>
            <classpath>
                <pathelement location="${dir.lib}/jhall.jar"/>
            </classpath>
        </java>
    </target>

    <!--  === TARGET: jar === -->
    <target name="jar" depends="compile">
        <manifest file="MANIFEST.MF">
            <attribute name="Built-By" value="${my.name} ${my.email}"/>
            <attribute name="Specification-Title"
                       value="${product.Name}"/>
            <attribute name="Specification-Version"
                       value="${product.version.major}.${product.version.minor}"/>
            <attribute name="Specification-Vendor"
                       value="${spec.vendor}"/>
            <attribute name="Implementation-Title"
                       value="${impl.title}"/>
            <attribute name="Implementation-Version"
                       value="${product.Version} built on ${TODAY_US}"/>
            <attribute name="Implementation-Vendor"
                       value="${nps}, ${moves.institute}, ${savage.research.group}"/>
            <attribute name="Implementation-URL"
                       value="${Savage.url}"/>

            <section name="edu.nps.util"/>
            <section name="viskit"/>
            <section name="viskit.assembly"/>
            <section name="viskit.control"/>
            <section name="viskit.doe"/>
            <section name="viskit.gridlet"/>
            <section name="viskit.images"/>
            <section name="viskit.javahelp"/>
            <section name="viskit.javahelp.Images"/>
            <section name="viskit.javahelp.Images.icons"/>
            <section name="viskit.javahelp.Pages"/>
            <section name="viskit.javahelp.Pages.Menus"/>
            <section name="viskit.javahelp.Pages.Tabs"/>
            <section name="viskit.javahelp.Pages.Tutorial_files"/>
            <section name="viskit.javahelp.Pages.images"/>
            <section name="viskit.javahelp.References"/>
            <section name="viskit.jgraph"/>
            <section name="viskit.model"/>
            <section name="viskit.mvc"/>
            <section name="viskit.reports"/>
            <section name="viskit.util"/>
            <section name="viskit.view"/>
            <section name="viskit.view.dialog"/>
            <section name="viskit.xsd.bindings.assembly"/>
            <section name="viskit.xsd.bindings.assembly.stats"/>
            <section name="viskit.xsd.bindings.cli"/>
            <section name="viskit.xsd.bindings.eventgraph"/>
            <section name="viskit.xsd.cli"/>
            <section name="viskit.xsd.translator.assembly"/>
            <section name="viskit.xsd.translator.eventgraph"/>
        </manifest>
        <jar basedir="${dir.build.classes}"
             compress="false"
             destfile="${dist.jar}"
             excludes="viskit.test.*"
             manifest="MANIFEST.MF">
            <metainf file="license/lgpl.txt"/>
            <metainf file="license/license.txt"/>
            <metainf file="license/license.html"/>
            <metainf file="license/THIRDPARTYLICENSEREADME.html"/>
        </jar>
    </target>

    <target name="make.classpath"
            description="Class-Path header for the editor jar">
        <pathconvert dirsep="/"
                     pathsep=" "
                     property="launcher.classpath"
                     refid="runtime.classpath">
            <map from="*${dir.build.classes}" to=""/>
            <mapper>
                <globmapper from="${basedir}/lib/*" to="lib/*"/>
            </mapper>
        </pathconvert>
    </target>

    <target name="jar.editor" depends="jar,make.classpath">

        <!--echo message="${toString:runtime.classpath}"/>
        <echo message="${launcher.classpath}"/-->

        <jar basedir="${dir.build.classes}"
             compress="false"
             destfile="${dist.editor.jar}"
             manifest="MANIFEST.MF">
            <manifest>

                <!-- used by native launcher, see launch4j -->
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${launcher.classpath}"/>
                <attribute name="SplashScreen-Image" value="META-INF/ViskitSplash2.png"/>
            </manifest>
            <metainf file="license/lgpl.txt"/>
            <metainf file="license/license.txt"/>
            <metainf file="${splash.image}"/>
        </jar>
    </target>

    <target name="fresh.diskit" description="diskit module">
        <echo message="Building Diskit:"/>
        <ant dir="${dir.diskit}" target="jar" inheritAll="false"/>
        <copy file="${dir.diskit}/dist/lib/diskit.jar" todir="${dir.lib.ext}"/>
        <copy todir="${dir.lib.ext}">
            <fileset dir="${dir.diskit}/lib">
                <include name="opendis7-pdus-classes.jar"/>
                <include name="opendis7-enumerations-classes.jar"/>
            </fileset>
        </copy>
    </target>

    <!-- just add new modules to the depends variable here -->
    <target name="runtime.extensions"
            depends="fresh.diskit"
            description="compile application specific modules, like diskit"/>

    <target name="build.with.extensions"
            depends="jar,runtime.extensions"
            description="Build viskit and any extension jars"/>

    <target name="build.no.extensions"
            depends="jar"
            description="Build viskit jar only, no DES extensions"/>

    <!--  === TARGET: javadoc.prior is now obsolete. Create javadocs and put the result in the docs directory. === -->
    <target name="javadoc.prior"
            depends="init,compile"
            description="Create the javadoc for Viskit.">

        <delete dir="${dir.api.doc}"/>
        <mkdir dir="${dir.api.doc}"/>
        <javadoc access="public"
                 author="true"
                 destdir="${dir.api.doc}"
                 sourcepath="${dir.src}"
                 bottom="${copyright}"
                 version="true">

            <!-- Include all the jar files in the lib directory; this prevents some
            javadoc warnings about classes not being found. -->
            <classpath>
                <fileset dir="${dir.lib}" includes="**/*.jar"/>
            </classpath>
            <package name="edu.nps.util"/>
            <package name="viskit"/>
            <package name="viskit.assembly"/>
            <package name="viskit.control"/>
            <package name="viskit.doe"/>
            <package name="viskit.gridlet"/>
            <package name="viskit.images"/>
            <package name="viskit.jgraph"/>
            <package name="viskit.model"/>
            <package name="viskit.mvc"/>
            <package name="viskit.reports"/>
            <package name="viskit.util"/>
            <package name="viskit.view"/>
            <package name="viskit.xsd.bindings.assembly"/>
            <package name="viskit.xsd.bindings.assembly.stats"/>
            <package name="viskit.xsd.bindings.cli"/>
            <package name="viskit.xsd.bindings.eventgraph"/>
            <package name="viskit.xsd.cli"/>
            <package name="viskit.xsd.translator.assembly"/>
            <package name="viskit.xsd.translator.eventgraph"/>

            <!-- Updated links to current APIs -->
            <link href="${j2se.api}"/>
            <link href="${simkit.api}"/>
            <link href="${jdom.api}"/>
	    <link href="${commons.config.api}"/>
	    <link href="${jfreechart.api}"/>
	    <link href="${jgraph.api}"/>
        </javadoc>
    </target>

    <!-- === TARGET: dist === -->
    <target name="dist" depends="versions,clean,build,javadoc.custom">
        <mkdir dir="${dir.dist}"/>
        <mkdir dir="${dir.dist}/doc/api"/>
        <mkdir dir="${dir.dist}/examples"/>
        <copy todir="${dir.dist}">
            <fileset dir="${dir.build.lib}"/>
        </copy>
        <copy todir="${dir.dist}/doc">
            <fileset dir="${javadoc.dir}"/>
        </copy>
        <copy todir="${dir.dist}/examples">
            <fileset dir="${examples.lib}">
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="build.gridkit" depends="build.with.extensions">
        <delete dir="${dir.dist}"/>
        <mkdir dir="${dir.dist}/lib"/>

        <copy todir="${dir.dist}/lib">
            <fileset file="${dist.jar}"/>
            <fileset dir="${dir.lib}">
                <include name="bsh-2.0b4.jar"/>
                <include name="commons-beanutils-1.9.4.jar"/>
                <include name="commons-codec-1.3.jar"/>
                <include name="commons-collections4-4.1.jar"/>
                <include name="commons-configuration2-2.10.1.jar"/>
                <include name="commons-digester3-3.2.jar"/>
                <include name="commons-lang-3-3.14.0.jar"/>
                <include name="commons-logging-1.3.1.jar"/>
                <include name="jdom-1.1.3.jar"/>
                <include name="${log4j.jars}"/>
                <include name="simkit.jar"/>
                <include name="xmlrpc-2.0.jar"/>
            </fileset>
            <fileset dir="${dir.lib.ext}" includes="*.jar"/>
            <fileset refid="jaxb.runtime.path"/>
        </copy>

        <mkdir dir="${dir.dist}/gridkit-stage"/>
        <copy todir="${dir.dist}/gridkit-stage">
            <fileset dir="${dir.src.cli.util}">
                <include name="config.properties"/>
            </fileset>
        </copy>

        <mkdir dir="${dir.dist}/gridkit-stage/examples"/>
        <copy todir="${dir.dist}/gridkit-stage/examples">
            <fileset dir="${examples.lib}">
                <include name="**/*.xml"/>
                <exclude name="**/viskitProject.xml"/>
            </fileset>
        </copy>

        <mkdir dir="${dir.dist}/gridkit-stage/viskit/xsd/cli"/>
        <copy todir="${dir.dist}/gridkit-stage/viskit/xsd/cli" >
            <fileset dir="${dir.build}/classes/viskit/xsd/cli" >
                <include name="Boot.class"/>
                <include name="Launcher.class"/>
            </fileset>
        </copy>

        <jar basedir="${dir.dist}/gridkit-stage"
             destfile="${dir.dist}/gridkit.jar"
             manifest="${dir.src.cli.util}/manif.txt" />

    </target>

    <target name="build.run.with.extensions"
            depends="build.with.extensions,quick.run"
            description="Build and Run Viskit extended by including external runtime modules">
    </target>
    <target name="build.run.no.extensions"
            depends="build,quick.run"
            description="Build and Run Viskit only, no module dependencies">
    </target>

    <target name="run" depends="build.run.no.extensions" description="Default run target. Builds Viskit, then runs the app"/>

    <!-- TARGET: Quick Run, doesn't check dependencies, or compile -->
    <target name="quick.run"
            depends="init"
            description="Run Viskit, don't check dependencies, don't rebuild">
        <splash imageurl="file:${basedir}/${splash.image}"
                useproxy="true"
                showduration="0"/>
        <java classname="${main.class}"
              classpathref="runtime.classpath"
              fork="true">
            <classpath path="${extra.classpath}"/>
            <jvmarg line="${run.args}"/>
            <arg value="${viskit.args}"/>
        </java>
    </target>

    <target name="quick.run.ViskitLayoutRedesign" depends="init" description="new GUI">
        <echo message="consider new layout possibilities"/>
        <java classname="viskit.ViskitLayoutRedesign"
              classpathref="runtime.classpath"
              fork="true">
            <jvmarg line="${run.args}"/>
        </java>
    </target>

    <target name="debug.viskit.editor.jar"
            depends="jar.editor"
            description="Test the ${dist.editor.jar}">

        <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
        <nbjpdastart addressproperty="jpda.address" name="${ant.project.name}" transport="dt_socket">
            <classpath refid="runtime.classpath"/>
        </nbjpdastart>

        <copy todir="${basedir}">
            <fileset refid="runtime.viskit.editor"/>
        </copy>

        <java jar="viskit-editor.jar"
              fork="true"
              failonerror="true">
            <classpath path="${extra.classpath}"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <jvmarg line="${run.args}"/>

            <!-- Any debug args can go here -->
            <arg value="${viskit.args}"/>
        </java>

    </target>

    <target depends="compile,quick.debug" description="Debug Viskit" name="debug"/>

    <!-- TARGET: Quick Debug doesn't check dependencies, or compile -->
    <target name="quick.debug" depends="init" description="Debug Viskit, don't check dependencies, don't rebuild">
        <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
        <nbjpdastart addressproperty="jpda.address" name="${ant.project.name}" transport="dt_socket">
            <classpath refid="runtime.classpath"/>
        </nbjpdastart>
        <java classname="${debug.class}"
              classpathref="runtime.classpath"
              fork="true"
              dir="${start.dir}">
            <classpath path="${extra.classpath}"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <jvmarg line="${run.args}"/>

            <!-- Any debug args can go here -->
            <arg value="${viskit.args}"/>
        </java>
    </target>

    <target name="compile.test" depends="init"
            description="Build the JUnit test harness">

        <javac destdir="${dir.build.test.classes}"
               release="${javac.release}"
               debug="true"
               includeantruntime="false">

            <compilerarg line="${javac.compile.args}"/>
            <classpath refid="runtime.test.classpath"/>
            <src path="${dir.test}"/>
        </javac>

    </target>

    <target name="test" depends="test.code.format,test.var.args,test.statics" description="run all working tests"/>

    <target name="test.code.format" depends="compile.test" description="TestCodeFormat runner">
        <echo message="viskit.test.TestCodeFormat test/ArrayTester.xml"/>
        <!-- TODO improve output formatting -->
        <java classname="viskit.test.TestCodeFormat" classpathref="runtime.test.classpath" fork="true" failonerror="true">
            <arg value="test/ArrayTester.xml"/>
        </java>
    </target>
    <target name="test.var.args" depends="compile.test" description="TestVarArgs runner">
        <echo message="viskit.test.TestVarArgs"/>
        <java classname="viskit.test.TestVarArgs" classpathref="runtime.test.classpath" fork="true" failonerror="true"/>
    </target>
    <target name="test.statics" depends="compile.test" description="LocalBootLoader test">
        <echo message="viskit.doe.StaticsTest"/>
        <java classname="viskit.doe.StaticsTest" classpathref="runtime.test.classpath" fork="true" failonerror="true"/>
    </target>

    <!-- For the following test targets set up a server, first run the ant gridkit-jar target,
         then on the command line, navigate to the Viskit base directory and :
         "java -Djava.endorsed.dirs=dist/lib/endorsed -jar dist/gridkit.jar", then run
         the below target
    -->

    <!-- Run this first to establish login credentials for the gridlet -->
    <target name="test-gridkit-login" depends="compile.test" description="Test Gridkit login">
        <java classname="viskit.test.TestGridkitLogin" classpathref="runtime.test.classpath" fork="true">
            <arg value="localhost" />
            <arg value="4444" />
        </java>
    </target>

    <!-- Currently, we do not include the qstat package.  This will not work -->
    <target name="test-gridkit-qstat" depends="compile.test" description="Test Gridkit qstat">
        <java classname="viskit.test.TestGridkitQstat" classpathref="runtime.test.classpath" fork="true">
            <arg value="localhost" />
            <arg value="4444" />
        </java>
    </target>

    <!-- Currently, we do not include the qsub package.  This will not work -->
    <target name="test-gridkit-ServerAssembly3" depends="compile.test" description="Test Gridkit ServerAssembly3">
        <java classname="viskit.test.TestGridkitServerAssembly3" classpathref="runtime.test.classpath" fork="true">
            <arg value="localhost" />
            <arg value="4444" />
        </java>
    </target>

    <target name="runDOE"
            depends="jar,runtime.extensions"
            description="Run Design-Of-Experiments">
        <java classname="viskit.doe.DoeMain" classpathref="runtime.classpath" fork="true" dir="${basedir}"/>
    </target>

    <!--  === TARGET: clean === -->
    <target name="clean"
            depends="reset.viskit"
            description="Deletes build directory, xsd bindings, dist directories, and lib/ext/*.jar(s)">
        <delete dir="${dir.bindings}"/>
        <delete dir="${dir.build}"/>
        <delete dir="${dir.dist}"/>
        <delete dir="${dir.lib.ext}">
            <include name="*.jar"/>
        </delete>
        <delete file="viskit-editor.jar"/>
        <delete dir="logs"/>
        <delete dir="pduLog"/>

        <!-- This one is scary -->
        <delete dir=".">
            <include name="*.zip"/>
        </delete>
    </target>
    
    <target name="clean.DefaultProject">
        <delete verbose="true">
            <fileset dir="MyViskitProjects/DefaultProject/AnalystReports">
                <include name="**/*.png"/>
                <include name="**/*.html"/>
                <include name="**/*.xml"/>
            </fileset>
        </delete>
        <delete verbose="true">
            <fileset dir="MyViskitProjects/DefaultProject/build">
                <include name="**/*.class"/>
                <include name="**/*.java"/>
            </fileset>
        </delete>
    </target>

    <target name="reset.viskit" description="Replace an out-of-synch configuration with known good defaults">
        <delete includeemptydirs="yes" dir="${dot.viskit.dir}"/>
        <mkdir  dir="${dot.viskit.dir}"/>
        <copy todir="${dot.viskit.dir}" file="${c_app.xml}"/>
        <copy todir="${dot.viskit.dir}" file="${c_gui.xml}"/>
        <copy todir="MyViskitProjects/DefaultProject" file="${proj.xml}" overwrite="true"/>
    </target>

    <!-- These targets are useful for viewing in the console various
         ${user.home}/.viskit properties/config files -->

    <target name="show.debug.log" depends="init">
        <concat>
            <fileset dir="logs" includes="debug.log*"/>
        </concat>
    </target>
    <target name="show.error.log" depends="init">
        <concat>
            <fileset dir="logs" includes="error.log*"/>
        </concat>
    </target>
    <target name="show.validation.errors" depends="init">
        <concat>
            <fileset dir="logs" includes="validationErrors.log"/>
        </concat>
    </target>
    
    <target name="clean.logs">
        <delete verbose="true" failonerror="false">
            <fileset dir="logs">
                <include name="*.log"/>
            </fileset>
        </delete>
    </target>

    <target name="show.app.xml" depends="init">
        <concat>
            <fileset dir="${dot.viskit.dir}" includes="c_app.xml"/>
        </concat>
    </target>

    <target name="show.gui.xml" depends="init">
        <concat>
            <fileset dir="${dot.viskit.dir}" includes="c_gui.xml"/>
        </concat>
    </target>

    <target name="show.passwd.xml" depends="init">
        <concat>
            <fileset dir="${dot.viskit.dir}" includes="passwd.xml"/>
        </concat>
    </target>

    <target name="show.dot.viskit.dir" depends="init">
        <concat>
            <fileset dir="${dot.viskit.dir}" includes="*"/>
        </concat>
    </target>
        
    
    <!-- ensure backwards compatibility of produced jar to specified version of Java, though project itself is JDK 17+ -->
    <property name="java.source"                 value="17"/>
    <property name="java.target"                 value="17"/>
    
    <property name="javadoc.additionalparam" value=""/>
    <property name="javadoc.author"          value="Don Brutzman brutzman@nps.edu"/>
    <property name="javadoc.dir"             value="javadoc"/>
    <property name="javadoc.encoding"        value="ISO-8859-1"/>
    <property name="javadoc.copyright"       value="Copyright &#169;1995-2025 held by the authors, &lt;a href='https://www.nps.edu'&gt;Naval Postgraduate School (NPS)&lt;/a&gt; under an &lt;a href='../license.html'&gt;open-source license&lt;/a&gt; and free for any use. &lt;a href='mailto:brutzman@nps.edu?subject=viskit%20feedback'&gt;Feedback&lt;/a&gt; is welcome."/>
    <property name="javadoc.noindex"         value="false"/>
    <property name="javadoc.nonavbar"        value="false"/>
    <property name="javadoc.notree"          value="false"/>
    <property name="javadoc.private"         value="false"/>
    <property name="javadoc.source"          value="${java.source}"/>
    <property name="javadoc.splitindex"      value="true"/>
    <property name="javadoc.breakiterator"   value="true"/>
    <property name="javadoc.use"             value="true"/><!-- Create class and package usage pages -->
    <property name="javadoc.version"         value="true"/>
    <property name="javadoc.windowtitle"     value="Viskit Javadoc"/>
    <property name="javadoc.doctitle"        value="${javadoc.windowtitle}"/>
    <!-- build.impl <javadoc additionalparam="-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}"> -->

    <target name="javadoc.custom" description="Customized javadoc">
        <!-- adapted from opendis7java project -->
        <echo message="$javac.classpath=${javac.classpath}"/>
        <mkdir dir="javadoc.dir"/>
        <copy file="src/viskit/images/ViskitSplash2.png" todir="${javadoc.dir}"/>
        <javadoc     destdir="${javadoc.dir}"
                     author="${javadoc.author}"
                     bottom="${javadoc.copyright}"
                     breakiterator="${javadoc.breakiterator}"
                     classpath="lib/*.jar;lib/log4j-api-2.23.1.jar;lib/log4j-api-2.23.1.jar"
                     Encoding="${javadoc.encoding}"
                     Doctitle="${javadoc.doctitle}"
                     Header="${javadoc.doctitle}"
                     maxmemory="4096m"
                     noindex="${javadoc.noindex}"
                     nonavbar="${javadoc.nonavbar}"
                     notree="${javadoc.notree}"
                     Overview="src/overview.html"
                     Private="${javadoc.private}"
                     source="${java.source}"
                     Splitindex="${javadoc.splitindex}"
                     Use="${javadoc.use}" 
                     useexternalfile="yes"
                     verbose="false"
                     version="${javadoc.version}"
                     windowtitle="${javadoc.windowtitle}">
            <classpath>
                <fileset dir="${dir.lib}/" includes="**/*.jar"/>
            </classpath>
            <fileset dir="." defaultexcludes="yes">
                <include name="src/**/*.java"/>
                <!-- latest enumerations are found in src-generated -->
                <include name="src-generated/**/*.java"/>
                <include name="test/**/*.java"/>
            </fileset>
        </javadoc>
        <antcall target="view.javadoc.local"/>
    </target>
    
    <target name="versions" description="show tool versions and environment values">
        <echo>ant -version</echo>
        <exec executable="ant"  dir="." vmlauncher="false" osfamily="windows">
            <arg value="-version"/>
        </exec>
        <echo>java -version</echo>
        <exec executable="java" dir="." vmlauncher="false" osfamily="windows">
            <arg value="-version"/>
        </exec>
        <echo></echo>
        <!-- Ant environment variables https://ant.apache.org/manual/Tasks/property.html -->
        <echo>  ANT_HOME=${env.ANT_HOME}</echo>
        <echo> JAVA_HOME=${env.JAVA_HOME}</echo>
        <echo> CLASSPATH=${env.CLASSPATH}</echo>
    <!--<echo>USER      =${env.USER}</echo> -->
        <!-- https://stackoverflow.com/questions/949678/ant-is-using-wrong-java-version -->
        <!--echo>javac source/target      $java.source=${java.source}</ -->
        <echo>Java/JVM version    $ant.java.version=${ant.java.version}</echo>
        <echo>Java/JVM detail version $java.version=${java.version}</echo>
        <echo>Ant version              $ant.version=${ant.version}</echo>
        <echo>Configuration settings:  https://savage.nps.edu/Savage/developers.html</echo>
        <!-- TODO Netbeans version -->
        <!-- TODO Netbeans project version -->
        <!-- DEBUG: to show all environment and local properties, add
        <echoproperties/> -->
        <echo message="==========================================="/>
    </target>
    
    <target name="view.issues.online" description="view online issues in web browser (Netbeans only)">
        <echo message="https://gitlab.nps.edu/Savage/viskit/-/issues" />
        <nbbrowse url="https://gitlab.nps.edu/Savage/viskit/-/issues" />
        <!-- TODO implementation-independent approach if possible, but note that other Ant approaches usually have to be customized for each OS. -->
    </target>
    
    <target name="view.javadoc.local" description="view local package javadoc in web browser (Netbeans only)">
        <echo message="view local javadoc in ${javadoc.dir} subdirectory"/>
        <nbbrowse file="${javadoc.dir}/index.html" />
        <!-- TODO implementation-independent approach if possible, but note that other Ant approaches usually have to be customized for each OS. -->
    </target>
    
    <target name="view.javadoc.online" description="view online package javadoc in web browser (Netbeans only)">
        <echo message="TODO view online javadoc in dist/javadoc subdirectory"/>
        <nbbrowse url="TODO" />
        <!-- TODO implementation-independent approach if possible, but note that other Ant approaches usually have to be customized for each OS. -->
    </target>

</project>
