<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<SimEntity name="ServerWithReneges" package="examples" version="2.0" extend="SimEntityBase" description="Event graph for server handling customers and reneges" xsi:noNamespaceSchemaLocation="../../../../Schemas/simkit.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Parameter name="numberServers" type="int" description="total number of servers"/>
    <Parameter name="serviceTime" type="simkit.random.RandomVariate" description="probablilistic time duration to service a customer"/>
    <Parameter name="renegeTime" type="simkit.random.RandomVariate" description="likely wait time before a customer decides to reneqe and get out of the service line"/>
    <StateVariable name="numberAvailableServers" type="int" description="current number of available servers"/>
    <StateVariable name="queue" type="java.util.LinkedList&lt;Integer&gt;" description="ordered list of waiting customers, First In FIrst Out (FIFO)"/>
    <StateVariable name="numberServed" type="int" description="how many customers have been successfully served"/>
    <StateVariable name="numberReneges" type="int" description="count number of customer reneges"/>
    <Event name="Run" description="This event is automatically scheduled to occur when the simulation begins to run, enabling author to schedule commencement of first simulation activity.">
        <StateTransition state="numberAvailableServers">
            <Assignment value="getNumberServers()"/>
        </StateTransition>
        <StateTransition state="queue">
            <Operation method="clear()"/>
        </StateTransition>
        <StateTransition state="numberServed">
            <Assignment value="0"/>
        </StateTransition>
        <StateTransition state="numberReneges">
            <Assignment value="0"/>
        </StateTransition>
        <Code></Code>
        <Coordinate x="70.0" y="70.0"/>
    </Event>
    <Event name="Arrival" description="customer has arrived">
        <Argument name="customer" type="java.lang.Integer" description=""/>
        <StateTransition state="queue">
            <Operation method="add(customer)"/>
        </StateTransition>
        <Schedule delay="renegeTime.generate()" event="Renege" priority="DEFAULT" description="designate a probabilistic subset of customers who decide to renege">
            <EdgeParameter value="customer"/>
        </Schedule>
        <Schedule delay="0.0" event="StartService" condition="getNumberAvailableServers() &gt; 0" priority="DEFAULT" description="activate the next server to handle this customer arrival"/>
        <Code></Code>
        <Coordinate x="70.0" y="170.0"/>
    </Event>
    <Event name="StartService" description="commence service for current customer, schedule completion time">
        <LocalVariable name="customer" type="java.lang.Integer" value="queue.getFirst()" description="ID number for current customer"/>
        <StateTransition state="queue">
            <Operation method="removeFirst()"/>
        </StateTransition>
        <StateTransition state="numberAvailableServers">
            <Assignment value="numberAvailableServers - 1"/>
        </StateTransition>
        <Cancel event="Renege" description="cancel service for this customer">
            <EdgeParameter value="customer"/>
        </Cancel>
        <Schedule delay="serviceTime.generate()" event="EndService" priority="DEFAULT" description="schedule completion of this customer following a probabilistic serviceTime interval">
            <EdgeParameter value="customer"/>
        </Schedule>
        <Code></Code>
        <Coordinate x="210.0" y="160.0"/>
    </Event>
    <Event name="EndService" description="customer service activity complete">
        <Argument name="customer1" type="java.lang.Integer" description=""/>
        <StateTransition state="numberAvailableServers">
            <Assignment value="numberAvailableServers+1"/>
        </StateTransition>
        <StateTransition state="numberServed">
            <Assignment value="numberServed+1"/>
        </StateTransition>
        <Schedule delay="0.0" event="StartService" condition="queue.size() &gt; 0" priority="HIGH" description="once prior customer has been served, announce availability of this server for next customer"/>
        <Code></Code>
        <Coordinate x="340.0" y="160.0"/>
    </Event>
    <Event name="Renege" description="customer reneges out of line, no longer requesting service">
        <Argument name="customer2" type="java.lang.Integer" description=""/>
        <StateTransition state="queue">
            <Operation method="remove(customer2)"/>
        </StateTransition>
        <StateTransition state="numberReneges">
            <Assignment value="numberReneges+1"/>
        </StateTransition>
        <Code></Code>
        <Coordinate x="140.0" y="280.0"/>
    </Event>
</SimEntity>
